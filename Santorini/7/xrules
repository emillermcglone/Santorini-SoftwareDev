#! /usr/bin/python3
# File that sets up test harness and reads tests

import sys
# Add parent directory to path so that we can import from Santorini
sys.path.append('..')
import json
# import the needed parts from Santorini to run tests
from Santorini.Player.rule_parser import Rule_Tester
from Santorini.Lib.util import parse_json

# Parse out JSON commands on STDIN
cmds = parse_json()
# Instantiate the test parser
parser = Rule_Tester()

# Take the first JSON which is the state of the board and set that up
parser.set_board(cmds[0])
# Go though the test JSON and take care of them one at a time

# Run the initial command to set test state
prev_cmd = cmds[1][0]
prev_res = parser.parse(cmds[1])

for j in cmds[2:]:

    # Determine where we are in a move/build sequence and whether to print
    if j[0] == "+build" and prev_cmd == "move" and prev_res == "yes":
        print(json.dumps(parser.parse(j)))
        prev_cmd = "+build"
    elif j[0] == "+build" and prev_cmd == "move" and prev_res == "no":
        print(json.dumps(prev_res))
        prev_cmd = "+build"
    elif j[0] == "move" and prev_cmd == "move":
        print(json.dumps(prev_res))
        prev_res = parser.parse(j)
    elif j[0] == "move" and prev_cmd == "+build":
        prev_cmd = "move"
        prev_res = parser.parse(j)

# Handle trailing move command
if prev_cmd == "move":
    print(json.dumps(prev_res))